#!/usr/bin/env bash

declare -r esc=$'\033'
declare -r c_red="${esc}[31m"
declare -r c_reset="${esc}[0m"

declare maxlength=0
declare words=0
declare chars=0
declare charrange='[a-zA-Z0-9]'

err() {
  printf "${c_red}%s${c_reset}\n" "$*" >&2
}

die() {
  [[ -n "$1" ]] && err "$1"
  exit 1
}

has() {
  local verbose=false
  if [[ $1 == '-v' ]]; then
    verbose=true
    shift
  fi
  for c in "$@"; do c="${c%% *}"
    if ! command -v "$c" &> /dev/null; then
      [[ "$verbose" == true ]] && err "$c not found"
      return 1
    fi
  done
}

OPTERR=0
while getopts "w:c:m:r:" opt; do
  case "$opt" in
    w) words=$(printf '%d' "$OPTARG") ;;
    c) chars=$(printf '%d' "$OPTARG") ;;
    m) maxlength=$(printf '%d' "$OPTARG") ;;
    r) charrange=$(printf '%s' "$OPTARG") ;;
  esac
done
shift "$((OPTIND-1))"

words() {
  local str
  if has xkcdpass; then
    local opts=()
    (( maxlength > 0)) && opts+=( '--max' "$maxlength" )
    (( words > 0)) && opts+=( '-n' "$1" )
    str=$(xkcdpass "${opts[@]}")
  else
    str=$(shuf /usr/share/cracklib/cracklib-small | head -n "$1")
  fi
  str=$(sed -r "s/'(\w)\b/\1/g; s/\b(.)/\u\1/g; s/ //g" <<< "$str")
  printf '%s\n' "$str"
}

chars() {
  printf '%s\n' "$(grep -a -oP "$charrange" < /dev/urandom | tr -d '\n' | head -c "$1")"
}

if (( words > 0)); then
  words "$words"
elif (( chars > 0)); then
  chars "$chars"
else
  die 'specify words or chars'
fi
